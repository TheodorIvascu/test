name: Test Case Management

on:
  issues:
    types: [opened, edited, labeled, assigned]

permissions:
  issues: write  
  contents: read  

jobs:
  manage-test-cases:
    runs-on: ubuntu-latest
    steps:
      - name: Process test case issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const issueBody = issue.body || "";
            const issueLabels = issue.labels.map(label => label.name);
            const assignees = issue.assignees.map(assignee => assignee.login);

            let labelsToAdd = [];
            let labelsToRemove = [];

            // âœ… Add "Updated" label ONLY on the first edit
            if (context.eventName === "edited" && !issueLabels.includes("Updated")) {
              labelsToAdd.push("Updated");

              // If NMI is present, remove it and unassign the reporter
              if (issueLabels.includes("NMI")) {
                labelsToRemove.push("NMI");
                await github.rest.issues.removeAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  assignees: issue.user.login
                }).catch(error => console.log("No assignee to remove."));
              }
            }

            // âœ… Handle checkboxes for cross-browser and cross-OS
            if (issueBody.includes("- [x] Cross-browser testing is required")) {
              labelsToAdd.push("Cross-browser");
            } else {
              labelsToRemove.push("Cross-browser");
            }

            if (issueBody.includes("- [x] Cross-OS testing is required")) {
              labelsToAdd.push("Cross-OS");
            } else {
              labelsToRemove.push("Cross-OS");
            }

            // âœ… If a test case has "Status: Done" and is NOT failed, add "Test Case Regression Suite"
            if (issueLabels.includes("Status: Done") && !issueLabels.includes("Status: Fail")) {
              labelsToAdd.push("Test Case Regression Suite");
            }

            // âœ… If someone is assigned, add "Status: Progress"
            if (assignees.length > 0 && !issueLabels.includes("Status: Progress")) {
              labelsToAdd.push("Status: Progress");
            }

            // âœ… Apply label updates
            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labelsToAdd
              });
            }

            for (let label of labelsToRemove) {
              if (issueLabels.includes(label)) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  name: label
                }).catch(error => console.log(`Label '${label}' not found or already removed.`));
              }
            }

            // âœ… Handle CNT & Duplicate labels by adding a comment instead of closing
            if (issueLabels.includes("CNT") || issueLabels.includes("Duplicate")) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: "ðŸ”¹ This issue has been found as CNT/Duplicate."
              });
            }

            // âœ… Handle Done/Fail labels by adding a comment instead of closing
            if (issueLabels.includes("Status: Done") || issueLabels.includes("Status: Fail")) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `âœ… This test case has been marked as ${issueLabels.includes("Status: Done") ? "Done" : "Fail"}.`
              });
            }
