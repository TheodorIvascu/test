name: Test Case Management

on:
  issues:
    types: [opened, edited, labeled]

jobs:
  manage-test-cases:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get issue details
        uses: actions/github-script@v7
        id: issue_body
        with:
          script: |
            const issue = context.payload.issue;
            const issueBody = issue.body || "";
            const issueLabels = issue.labels.map(label => label.name);

            let labelsToAdd = [];

            // Check for checkboxes in the issue body
            if (issueBody.includes("- [x] Cross-browser testing is required")) {
              labelsToAdd.push("Cross-browser");
            }
            if (issueBody.includes("- [x] Cross-OS testing is required")) {
              labelsToAdd.push("Cross-OS");
            }

            // Add labels if they are missing
            if (labelsToAdd.length > 0) {
              github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labelsToAdd
              });
            }

            // Handle labels for assignment and closure
            if (issueLabels.includes("NMI")) {
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                assignees: [issue.user.login]
              });
            }

            if (issueLabels.includes("CNT") || issueLabels.includes("Duplicate")) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: "closed"
              });
            }

            // Handle Test Execution Results
            if (issueBody.includes("- [x] All expected results have passed")) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: ["Status: Done"]
              });
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: "closed"
              });
            }

            if (issueBody.includes("- [x] Some expected results have passed") || 
                issueBody.includes("- [x] All expected results have failed")) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: ["Status: Fail"]
              });
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: "closed"
              });
            }
